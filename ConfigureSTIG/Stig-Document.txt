{
  "schemaVersion": "2.2",
  "description": "Applies STIGs for Windows Server.",
  "parameters": {
    "Cat": {
      "allowedValues": [
        "Server2019",
        "IISSvr",
        "DevWS",
        "TestWS",
        "NetOpsWS",
        "SQL"
      ],
      "default": "Server2019",
      "description": "(Required) Choose the STIG category to apply.",
      "type": "String"
    }
  },
  "mainSteps": [
    {
      "inputs": {
        "runCommand": [
          "$region = 'us-gov-west-1'",
          "$urlSufix = 'amazonaws.com'",
          "[string]$Cat = '{{ Cat }}'",
          "[string]$stagingName = 'C:\\StigPrep'",
          "[string]$stagingPath = 'C:\\StigPrep'",
          "[string]$s3Bucket = 'jfft-deliveries'",
          "[string]$stigZip = 'winsvr2019.zip'",
          "[string]$stigZipPath = Join-Path $stagingPath -ChildPath $stigZip",
          "[string]$stigDownloadHash = '5da2d802a5fcb9f155b3d1461bdb160638f32e091189fc7ab0eae33b035c9609'",
          "",
          "#Make dir and download the required files",
          "Function Get-Zip {",
          "",
          "    If ( !( Test-Path -Path $stagingPath ) ) {",
          "        Try {",
          "            New-Item -ItemType Directory -Path $stagingPath -Force",
          "        }",
          "        Catch {",
          "            Write-Output \"Failed to create folder due to: $_.\"",
          "            Cleanup",
          "            Exit -1",
          "        }",
          "    }",
          "",
          "    $s3Path = 'https://jfft-deliveries.s3-us-gov-west-1.amazonaws.com/winsvr2019.zip'",
          "",
          "    $s3Location = $s3Path -f $s3Bucket, $region, $urlSufix, $stigZip",
          "",
          "    Try {",
          "         (New-Object Net.WebClient).DownloadFile($s3Location, $stigZipPath)",
          "    }",
          "    Catch {",
          "        Write-Output \"Failed to download the required files, due to: $_.\"",
          "        Cleanup",
          "        Exit -1",
          "    }",
          "",
          "    $downloadHash = (Get-FileHash -Path $stigZipPath -Algorithm SHA256).hash",
          "",
          "    If ( $downloadHash -ne $stigDownloadHash ) {",
          "        Write-Output \"The file doesn't have the expected hash.  Exiting.\"",
          "        Cleanup",
          "        Exit -1",
          "    }",
          "}",
          "",
          "#Expands downloaded zip files",
          "Function Expand-Zip {",
          "    [string]$psVersion = $PSVersionTable.PSVersion.Major",
          "",
          "    Try {",
          "        Expand-Archive -Path $stigZipPath -DestinationPath $stagingPath -Force",
          "    }",
          "    Catch {",
          "        Write-Output \"Failed to extract the zip file due to: $_.\"",
          "        Cleanup",
          "        Exit -1",
          "    }",
          "}",
          "",
          "#Run STIG Script",
          "Function Install-STIG {",
          "    Try {",
          "        &\"$stagingPath\\Win2019-STIG.ps1\" $Cat $stagingPath",
          "        Write-Output \"STIGs $Cat and/or lower have been applied.\"",
          "    }",
          "    Catch {",
          "        Write-Output \"Failed to run the STIG configuration script due to: $_.\"",
          "        Cleanup",
          "        Exit -1",
          "    }",
          "",
          "    If ($LastExitCode -ne 0) {",
          "        Write-Output \"Failed to run the STIG configuration script.\"",
          "        Cleanup",
          "        Exit -1",
          "    }",
          "}",
          "",
          "#Cleanup any remaining files",
          "Function Cleanup {",
          "    If (Test-Path \"$stagingPath\") {",
          "        Try {",
          "            Remove-Item -Path \"$stagingPath\" -Recurse",
          "            Write-Output 'STIG staging path removed.'",
          "        }",
          "        Catch {",
          "            \"Failed to clean up the staging area, due to: $_.\"",
          "            Exit -1",
          "        }",
          "    }",
          "}",
          "",
          "Get-Zip",
          "Expand-Zip",
          "Install-STIG",
          "Cleanup"
        ]
      },
      "name": "ApplyWindowsSTIGs",
      "action": "aws:runPowerShellScript",
      "precondition": {
        "StringEquals": [
          "platformType",
          "Windows"
        ]
      }
    }
  ]
}